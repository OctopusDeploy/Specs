{"Actions": [
        {
          "Id": "f2648a96-9dd2-4f55-b3b6-fbde0fe8dd48",
          "Name": "Deploy Octopus Server",
          "ActionType": "Octopus.KubernetesDeployContainers",
          "IsDisabled": false,
          "CanBeUsedForProjectVersioning": true,
          "IsRequired": false,
          "WorkerPoolId": null,
          "Environments": [],
          "ExcludedEnvironments": [],
          "Channels": [],
          "TenantTags": [],
          "Packages": [
            {
              "Id": "9d6f4b70-b62a-4c8c-ad4b-af710bb0a54d",
              "Name": "octopus",
              "PackageId": "octopusdeploy/linuxoctopus",
              "FeedId": "Feeds-1042",
              "AcquisitionLocation": "NotAcquired",
              "Properties": {
                "Extract": "true"
              }
            }
          ],
          "Properties": {
            "Octopus.Action.EnabledFeatures": "Octopus.Features.KubernetesService,Octopus.Features.KubernetesConfigMap,Octopus.Features.KubernetesSecret,Octopus.Features.KubernetesCustomResource",
            "Octopus.Action.KubernetesContainers.CombinedVolumes": "          [\n            {\n              \"Items\": [],\n              \"Name\": \"azure-file-share\",\n              \"ReferenceName\": \"\",\n              \"ReferenceNameType\": \"Custom\",\n              \"EmptyDirMedium\": \"\",\n              \"HostPathType\": \"Directory\",\n              \"HostPathPath\": \"\",\n              \"LocalPath\": \"\",\n              \"Type\": \"RawYaml\",\n              \"RawYaml\": \"azureFile:\\n  secretName: volume-azurefile-storage-secret\\n  shareName: #{InstanceId}\\n  readOnly: false\",\n              \"Repository\": \"\",\n              \"Revision\": \"\"\n            },\n            {\n              \"Items\": [],\n              \"Name\": \"octopus-logs\",\n              \"ReferenceName\": \"\",\n              \"ReferenceNameType\": \"Custom\",\n              \"EmptyDirMedium\": \"\",\n              \"HostPathType\": \"Directory\",\n              \"HostPathPath\": \"\",\n              \"LocalPath\": \"\",\n              \"Type\": \"EmptyDir\",\n              \"RawYaml\": \"\",\n              \"Repository\": \"\",\n              \"Revision\": \"\"\n            },\n            {\n              \"Items\": [],\n              \"Name\": \"octopus-nlog-config\",\n              \"ReferenceName\": \"octopus-nlog-config-#{Octopus.Deployment.Id | ToLower }\",\n              \"ReferenceNameType\": \"CustomResource\",\n              \"EmptyDirMedium\": \"\",\n              \"HostPathType\": \"Directory\",\n              \"HostPathPath\": \"\",\n              \"LocalPath\": \"\",\n              \"Type\": \"ConfigMap\",\n              \"RawYaml\": \"\",\n              \"Repository\": \"\",\n              \"Revision\": \"\"\n            }\n          ]\n        ",
            "Octopus.Action.KubernetesContainers.ConfigMapName": "octopus",
            "Octopus.Action.KubernetesContainers.ConfigMapValues": "          {\n            \"octopus-auth-providers-to-install\": \"#{AuthProvidersToInstall}\",\n            \"octopus-octopusid-clientid\": \"#{OctopusIdClientId}\",\n            \"octopus-octopusid-issuer\": \"#{OctopusIdIssuer}\"\n          }\n        ",
            "Octopus.Action.KubernetesContainers.Containers": "          [\n            {\n              \"Name\": \"octopus\",\n              \"Ports\": [\n                {\n                  \"key\": \"tentacle\",\n                  \"keyError\": null,\n                  \"value\": \"10943\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"web8080\",\n                  \"keyError\": null,\n                  \"value\": \"8080\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"web443\",\n                  \"keyError\": null,\n                  \"value\": \"443\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"EnvironmentVariables\": [\n                {\n                  \"key\": \"ADMIN_USERNAME\",\n                  \"keyError\": null,\n                  \"value\": \"#{AdminUsername}\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"ACCEPT_EULA\",\n                  \"keyError\": null,\n                  \"value\": \"Y\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"ADMIN_EMAIL\",\n                  \"keyError\": null,\n                  \"value\": \"devops@octopus.com\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"HAS_STATIC_IP\",\n                  \"keyError\": null,\n                  \"value\": \"#{HasStaticIp}\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"SecretEnvironmentVariables\": [\n                {\n                  \"key\": \"MASTER_KEY\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-masterkey\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"ADMIN_API_KEY\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-api-key\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"CONNSTRING\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-connstring\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"OCTOPUSID_CLIENT_SECRET\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-octopusid-clientsecret\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"CERTIFICATE\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-certificate\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"CERTIFICATE_KEY\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedSecretName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-certificate-key\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"ConfigMapEnvironmentVariables\": [\n                {\n                  \"key\": \"AUTH_PROVIDERS_TO_INSTALL\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedConfigMapName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-auth-providers-to-install\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"OCTOPUSID_CLIENT_ID\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedConfigMapName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-octopusid-clientid\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"OCTOPUSID_ISSUER\",\n                  \"keyError\": null,\n                  \"value\": \"#{Octopus.Action.KubernetesContainers.ComputedConfigMapName}\",\n                  \"valueError\": null,\n                  \"option\": \"octopus-octopusid-issuer\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"VolumeMounts\": [\n                {\n                  \"key\": \"azure-file-share\",\n                  \"keyError\": null,\n                  \"value\": \"/taskLogs\",\n                  \"valueError\": null,\n                  \"option\": \"tasklogs\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"azure-file-share\",\n                  \"keyError\": null,\n                  \"value\": \"/repository\",\n                  \"valueError\": null,\n                  \"option\": \"repository\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"azure-file-share\",\n                  \"keyError\": null,\n                  \"value\": \"/artifacts\",\n                  \"valueError\": null,\n                  \"option\": \"artifacts\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"azure-file-share\",\n                  \"keyError\": null,\n                  \"value\": \"/cache\",\n                  \"valueError\": null,\n                  \"option\": \"cache\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"azure-file-share\",\n                  \"keyError\": null,\n                  \"value\": \"/diagnostics\",\n                  \"valueError\": null,\n                  \"option\": \"diagnostics\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"octopus-logs\",\n                  \"keyError\": null,\n                  \"value\": \"/mnt/c/OctopusDev/OctopusServer/Server/Logs\",\n                  \"valueError\": null,\n                  \"option\": \"\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                },\n                {\n                  \"key\": \"octopus-nlog-config\",\n                  \"keyError\": null,\n                  \"value\": \"/Octopus/Octopus.Server.exe.nlog\",\n                  \"valueError\": null,\n                  \"option\": \"Octopus.Server.exe.nlog\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"Resources\": {\n                \"requests\": {\n                  \"memory\": \"#{MemoryRequest}\",\n                  \"cpu\": \"#{CPURequest}\"\n                },\n                \"limits\": {\n                  \"memory\": \"#{MemoryLimit}\",\n                  \"cpu\": \"#{CPULimit}\"\n                }\n              },\n              \"LivenessProbe\": {\n                \"failureThreshold\": \"10\",\n                \"initialDelaySeconds\": \"1800\",\n                \"periodSeconds\": \"30\",\n                \"successThreshold\": \"\",\n                \"timeoutSeconds\": \"5\",\n                \"type\": \"Command\",\n                \"exec\": {\n                  \"command\": [\n                    \"/bin/bash\",\n                    \"-c\",\n                    \"HAS_STATIC_IP=#{hasstaticip}; if [[ $HAS_STATIC_IP == \\\"True\\\" ]]; then URL=https://localhost:443; else URL=http://localhost:8080; fi; response=$(/usr/bin/curl -k $URL/api/octopusservernodes/ping --write-out %{http_code} --silent --output /dev/null); /usr/bin/test \\\"$response\\\" -ge 200 && /usr/bin/test \\\"$response\\\" -le 299 || /usr/bin/test \\\"$response\\\" -eq 418\"\n                  ]\n                }\n              },\n              \"ReadinessProbe\": {\n                \"failureThreshold\": \"60\",\n                \"initialDelaySeconds\": \"30\",\n                \"periodSeconds\": \"30\",\n                \"successThreshold\": \"\",\n                \"timeoutSeconds\": \"5\",\n                \"type\": \"Command\",\n                \"exec\": {\n                  \"command\": [\n                    \"/bin/bash\",\n                    \"-c\",\n                    \"HAS_STATIC_IP=#{hasstaticip}; if [[ $HAS_STATIC_IP == \\\"True\\\" ]]; then URL=https://localhost:443; else URL=http://localhost:8080; fi; response=$(/usr/bin/curl -k $URL/api/octopusservernodes/ping --write-out %{http_code} --silent --output /dev/null); /usr/bin/test \\\"$response\\\" -ge 200 && /usr/bin/test \\\"$response\\\" -le 299 || /usr/bin/test \\\"$response\\\" -eq 418\"\n                  ]\n                }\n              },\n              \"Command\": [],\n              \"Args\": [],\n              \"SecurityContext\": {\n                \"allowPrivilegeEscalation\": \"\",\n                \"privileged\": \"\",\n                \"readOnlyRootFilesystem\": \"\",\n                \"runAsGroup\": \"\",\n                \"runAsNonRoot\": \"\",\n                \"runAsUser\": \"\",\n                \"capabilities\": {\n                  \"add\": [\n                    \"CAP_SYS_PTRACE\"\n                  ],\n                  \"drop\": []\n                },\n                \"seLinuxOptions\": {\n                  \"level\": \"\",\n                  \"role\": \"\",\n                  \"type\": \"\",\n                  \"user\": \"\"\n                }\n              },\n              \"Lifecycle\": {\n                \"PreStop\": {\n                  \"Exec\": {\n                    \"command\": [\n                      \"dotnet\",\n                      \"/Octopus/Octopus.Server.dll\",\n                      \"node\",\n                      \"--instance=OctopusServer\",\n                      \"--drain=true\",\n                      \"--wait=600\",\n                      \"--cancel-tasks\"\n                    ]\n                  }\n                }\n              }\n            }\n          ]\n        ",
            "Octopus.Action.KubernetesContainers.CustomResourceYaml": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  labels:\n    app: octopus\n  name: octopus-nlog-config\ndata:\n  Octopus.Server.exe.nlog: |+\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <nlog\n      xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      autoReload=\"true\"\n      throwExceptions=\"false\"\n      internalLogLevel=\"Error\"\n      internalLogToConsole=\"true\">\n      <extensions>\n        <add assembly=\"Octopus.Shared\" />\n        <add assembly=\"Octopus.Server\" />\n      </extensions>\n      <variable name=\"appName\" value=\"Octopus\" />\n      <variable name=\"messageLayout\" value=\"${message}${onexception:${newline}${exception:format=ToString}}\" />\n      <variable name=\"normalLayout\" value=\"${longdate}  ${processid:padding=5}  ${threadid:padding=5} ${uppercase:${level}:padding=5}  ${messageLayout}\" />\n      <variable name=\"metricLayout\" value=\"{ &quot;logdatetime&quot;: &quot;${longdate:universalTime=true}&quot;, &quot;loglevel&quot;: &quot;${uppercase:${level}}&quot;, ${messageLayout} }\" />\n      <targets async=\"false\">\n        <target name=\"octopus-log-file\" xsi:type=\"File\" layout=\"${normalLayout}\" fileName=\"${octopusLogsDirectory}/OctopusServer.txt\" archiveFileName=\"${octopusLogsDirectory}/OctopusServer.{#}.txt\" archiveEvery=\"Day\" archiveNumbering=\"Rolling\" maxArchiveFiles=\"7\" concurrentWrites=\"true\" keepFileOpen=\"false\" />\n        <target name=\"octopus-metrics-file\" xsi:type=\"File\" layout=\"${metricLayout}\" fileName=\"${octopusLogsDirectory}/Metrics.txt\" archiveFileName=\"${octopusLogsDirectory}/Metrics.{#}.txt\" archiveEvery=\"Hour\" archiveNumbering=\"Rolling\" maxArchiveFiles=\"1\" concurrentWrites=\"true\" keepFileOpen=\"false\" />\n        <target xsi:type=\"ColoredConsole\" name=\"stdout\" layout=\"${messageLayout}\" />\n        <target xsi:type=\"ColoredConsole\" name=\"stderr\" errorStream=\"true\" layout=\"${messageLayout}\" />\n        <target xsi:type=\"EventLog\" name=\"eventlog\" source=\"${appName}\" layout=\"${normalLayout}\" />\n        <target xsi:type=\"RecentInMemory\" name=\"recent\" bufferSize=\"100\" />\n        <target name=\"seqbufferingwrapper\" xsi:type=\"BufferingWrapper\" bufferSize=\"1000\" flushTimeout=\"2000\">\n          <target name=\"seq\" xsi:type=\"Seq\" serverUrl=\"#{Seq.Url}\" apiKey=\"#{Seq.ApiKey}\">\n            <property name=\"Application\" value=\"Octopus.Server.Instance\" />\n            <property name=\"ApplicationSet\" value=\"Hostedv2\" />\n            <property name=\"Environment\" value=\"#{Octopus.Environment.Name}\" />\n            <property name=\"Reef\" value=\"#{Reef}\" />\n            <property name=\"InstanceId\" value=\"#{InstanceId}\" />\n          </target>\n        </target>\n      </targets>\n      <rules>\n        <logger name=\"MetricsLogger\" writeTo=\"octopus-metrics-file\" final=\"true\" />\n        <logger name=\"LogFileOnlyLogger\" writeTo=\"octopus-log-file\" final=\"true\" />\n        <logger name=\"Halibut\" minlevel=\"Info\" writeTo=\"octopus-log-file\" />\n        <logger name=\"*\" minlevel=\"Info\" writeTo=\"octopus-log-file\" />\n        <logger name=\"*\" minlevel=\"Fatal\" writeTo=\"eventlog\" />\n        <logger name=\"*\" minlevel=\"Warn\" writeTo=\"recent\" />\n        <logger name=\"*\" minlevel=\"Info\" maxLevel=\"Warn\" writeTo=\"stdout\" />\n        <logger name=\"*\" minlevel=\"Error\" writeTo=\"stderr\" />\n        <logger name=\"*\" minlevel=\"Info\" writeTo=\"seqbufferingwrapper\" />\n      </rules>\n    </nlog>\n",
            "Octopus.Action.KubernetesContainers.DeploymentLabels": "          {\n            \"Hosted.Instance\": \"#{InstanceId}\",\n            \"Hosted.OctopusServerVersion\": \"#{OctopusServerVersion}\",\n            \"Hosted.DnsPrefix\": \"#{DnsPrefix}\"\n          }\n        ",
            "Octopus.Action.KubernetesContainers.DeploymentName": "octopus-#{InstanceId}",
            "Octopus.Action.KubernetesContainers.DeploymentStyle": "Recreate",
            "Octopus.Action.KubernetesContainers.DeploymentWait": "Wait",
            "Octopus.Action.KubernetesContainers.IngressAnnotations": "[]",
            "Octopus.Action.KubernetesContainers.NodeAffinity": "          [\n            {\n              \"Type\": \"Required\",\n              \"Weight\": \"\",\n              \"InMatch\": [\n                {\n                  \"key\": \"agentpool\",\n                  \"keyError\": null,\n                  \"value\": \"In\",\n                  \"valueError\": null,\n                  \"option\": \"linuxpool\",\n                  \"optionError\": null,\n                  \"option2\": \"\",\n                  \"option2Error\": null\n                }\n              ],\n              \"ExistMatch\": []\n            }\n          ]\n        ",
            "Octopus.Action.KubernetesContainers.PodAnnotations": "          [\n            {\n              \"key\": \"cluster-autoscaler.kubernetes.io/safe-to-evict\",\n              \"keyError\": null,\n              \"value\": \"false\",\n              \"valueError\": null,\n              \"option\": \"\",\n              \"optionError\": null,\n              \"option2\": \"\",\n              \"option2Error\": null\n            }\n          ]\n        ",
            "Octopus.Action.KubernetesContainers.ProgressDeadlineSeconds": "1500",
            "Octopus.Action.KubernetesContainers.Replicas": "1",
            "Octopus.Action.KubernetesContainers.SecretName": "octopus",
            "Octopus.Action.KubernetesContainers.SecretValues": "          {\n            \"octopus-api-key\": \"#{ApiKey}\",\n            \"octopus-masterkey\": \"#{MasterKey}\",\n            \"octopus-connstring\": \"#{DatabaseConnectionString}\",\n            \"octopus-octopusid-clientsecret\": \"#{OctopusIdClientSecret}\",\n            \"octopus-certificate\": \"#{Certificate}\",\n            \"octopus-certificate-key\": \"#{CertificateKey}\"\n          }\n        ",
            "Octopus.Action.KubernetesContainers.ServiceName": "octopus-#{InstanceId}",
            "Octopus.Action.KubernetesContainers.ServicePorts": "          [\n            {\n              \"name\": \"web\",\n              \"port\": \"80\",\n              \"targetPort\": \"8080\",\n              \"nodePort\": \"\",\n              \"protocol\": \"TCP\"\n            },\n            {\n              \"name\": \"tentacle\",\n              \"port\": \"10943\",\n              \"targetPort\": \"\",\n              \"nodePort\": \"\",\n              \"protocol\": \"TCP\"\n            },\n            {\n              \"name\": \"metrics\",\n              \"port\": \"9273\",\n              \"targetPort\": \"9273\",\n              \"nodePort\": \"\",\n              \"protocol\": \"TCP\"\n            }\n          ]\n        ",
            "Octopus.Action.KubernetesContainers.ServiceType": "ClusterIP",
            "Octopus.Action.KubernetesContainers.TerminationGracePeriodSeconds": "610",
            "Octopus.Action.RunOnServer": "true"
          },
          "Links": {}
        }
      ]
}